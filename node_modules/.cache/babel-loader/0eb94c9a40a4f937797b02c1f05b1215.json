{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar ButtonGroup = function ButtonGroup(props) {\n  return React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n\n    var customizePrefixCls = props.prefixCls,\n        size = props.size,\n        className = props.className,\n        others = __rest(props, [\"prefixCls\", \"size\", \"className\"]);\n\n    var prefixCls = getPrefixCls('btn-group', customizePrefixCls); // large => lg\n    // small => sm\n\n    var sizeCls = '';\n\n    switch (size) {\n      case 'large':\n        sizeCls = 'lg';\n        break;\n\n      case 'small':\n        sizeCls = 'sm';\n        break;\n\n      default:\n        break;\n    }\n\n    var classes = classNames(prefixCls, _defineProperty({}, \"\".concat(prefixCls, \"-\").concat(sizeCls), sizeCls), className);\n    return React.createElement(\"div\", _extends({}, others, {\n      className: classes\n    }));\n  });\n};\n\nexport default ButtonGroup;","map":{"version":3,"sources":["button/button-group.jsx"],"names":["__rest","t","Object","e","s","i","p","ButtonGroup","getPrefixCls","customizePrefixCls","size","className","props","others","prefixCls","sizeCls","classes","classNames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,MAAM,GAAI,QAAQ,KAAT,MAAC,IAAwB,UAAA,CAAA,EAAA,CAAA,EAAgB;AAClD,MAAIC,CAAC,GAAL,EAAA;;AACA,OAAK,IAAL,CAAA,IAAA,CAAA,EAAA;AAAiB,QAAIC,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,KAA8CC,CAAC,CAADA,OAAAA,CAAAA,CAAAA,IAAlD,CAAA,EACbF,CAAC,CAADA,CAAC,CAADA,GAAOG,CAAC,CAARH,CAAQ,CAARA;AADJ;;AAEA,MAAIG,CAAC,IAADA,IAAAA,IAAa,OAAOF,MAAM,CAAb,qBAAA,KAAjB,UAAA,EACI,KAAK,IAAIG,CAAC,GAAL,CAAA,EAAWC,CAAC,GAAGJ,MAAM,CAANA,qBAAAA,CAApB,CAAoBA,CAApB,EAAqDG,CAAC,GAAGC,CAAC,CAA1D,MAAA,EAAmED,CAAnE,EAAA,EAAwE;AACpE,QAAIF,CAAC,CAADA,OAAAA,CAAUG,CAAC,CAAXH,CAAW,CAAXA,IAAAA,CAAAA,IAAuBD,MAAM,CAANA,SAAAA,CAAAA,oBAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAA8CI,CAAC,CAA1E,CAA0E,CAA/CJ,CAA3B,EACID,CAAC,CAACK,CAAC,CAAHL,CAAG,CAAF,CAADA,GAAUG,CAAC,CAACE,CAAC,CAAbL,CAAa,CAAF,CAAXA;AACP;AACL,SAAA,CAAA;AATJ,CAAA;;AAWA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,SAAA,cAAA,QAAA,oBAAA;;AACA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAK;AAAA,SAAK,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,EACzB,UAAA,IAAA,EAAsB;AAAA,QAAnBC,YAAmB,GAAA,IAAA,CAAnBA,YAAmB;;AAAA,QACJC,kBADI,GACoCG,KADpC,CAAA,SAAA;AAAA,QACgBF,IADhB,GACoCE,KADpC,CAAA,IAAA;AAAA,QACsBD,SADtB,GACoCC,KADpC,CAAA,SAAA;AAAA,QAC2CC,MAD3C,GACoDb,MAAM,CAAA,KAAA,EAAQ,CAAA,WAAA,EAAA,MAAA,EADlE,WACkE,CAAR,CAD1D;;AAEvB,QAAMc,SAAS,GAAGN,YAAY,CAAA,WAAA,EAFP,kBAEO,CAA9B,CAFuB,CAGvB;AACA;;AACA,QAAIO,OAAO,GAAX,EAAA;;AACA,YAAA,IAAA;AACI,WAAA,OAAA;AACIA,QAAAA,OAAO,GAAPA,IAAAA;AACA;;AACJ,WAAA,OAAA;AACIA,QAAAA,OAAO,GAAPA,IAAAA;AACA;;AACJ;AACI;AARR;;AAUA,QAAMC,OAAO,GAAGC,UAAU,CAAA,SAAA,EAAA,eAAA,CAAA,EAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,CAAA,OAAA,CAAA,EAAA,OAAA,CAAA,EAA1B,SAA0B,CAA1B;AAGA,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AAAiB,MAAA,SAAS,EAAED;AAA5B,KAAA,CAAA,CAAP;AApBqB,GAAK,CAAL;AAAzB,CAAA;;AAuBA,eAAA,WAAA","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nconst ButtonGroup = props => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const { prefixCls: customizePrefixCls, size, className } = props, others = __rest(props, [\"prefixCls\", \"size\", \"className\"]);\n    const prefixCls = getPrefixCls('btn-group', customizePrefixCls);\n    // large => lg\n    // small => sm\n    let sizeCls = '';\n    switch (size) {\n        case 'large':\n            sizeCls = 'lg';\n            break;\n        case 'small':\n            sizeCls = 'sm';\n            break;\n        default:\n            break;\n    }\n    const classes = classNames(prefixCls, {\n        [`${prefixCls}-${sizeCls}`]: sizeCls,\n    }, className);\n    return <div {...others} className={classes}/>;\n}}\n  </ConfigConsumer>);\nexport default ButtonGroup;\n"]},"metadata":{},"sourceType":"module"}