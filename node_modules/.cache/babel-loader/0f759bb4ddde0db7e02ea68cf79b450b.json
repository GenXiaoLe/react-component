{"ast":null,"code":"var _jsxFileName = \"/Users/hanyue/development/github/react-components/src/plugins/KRouter.js\";\n// 组件目标\n// 实现BrowserRouter\n// 1.将children传出\n// 2.link需要动态更新history，利用上下文context传出\n// 实现Route\n// 实现Link\n// 1.返回一个a标签 接收 to 和 children两个参数\n// 2.为了避免a标签切换界面闪屏，点击时候利用history跳转\n// 3.为了保证动态更新，使用同一个history，从父组件BrowserRouter中传下来\nimport React, { Component } from 'react';\nimport { createBrowerHistory } from 'history';\nconst RouterContext = React.createContext();\n\nclass BrowserRouter extends Component {\n  constructor(props) {\n    super(props);\n    this.history = createBrowerHistory();\n    this.state = {\n      location: this.history.location\n    };\n  }\n\n  render() {\n    return React.createElement(RouterContext.Provider, {\n      value: {\n        history: this.history\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nclass Route extends Component {\n  render() {\n    const {\n      path,\n      component\n    } = this.props;\n    const match = window.location.pathname === path;\n    return match ? React.createElement(component, this.props) : null;\n  }\n\n}\n\nclass Link extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = (event, history) => {\n      event.preventDefault();\n      history.push(this.props.to);\n    };\n  }\n\n  render() {\n    const {\n      to,\n      children\n    } = this.props;\n    return React.createElement(RouterContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, context => {\n      return React.createElement(\"a\", {\n        href: to,\n        onClick: event => this.handleClick(event, context.history),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, children);\n    });\n  }\n\n}\n\nexport { BrowserRouter, Route, Link };","map":{"version":3,"sources":["/Users/hanyue/development/github/react-components/src/plugins/KRouter.js"],"names":["React","Component","createBrowerHistory","RouterContext","createContext","BrowserRouter","constructor","props","history","state","location","render","children","Route","path","component","match","window","pathname","createElement","Link","handleClick","event","preventDefault","push","to","context"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,SAApC;AAEA,MAAMC,aAAa,GAAGH,KAAK,CAACI,aAAN,EAAtB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAeN,mBAAmB,EAAlC;AACA,SAAKO,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KAAKF,OAAL,CAAaE;AADd,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAE;AAACH,QAAAA,OAAO,EAAE,KAAKA;AAAf,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWK,QADhB,CADJ;AAKH;;AAfiC;;AAkBtC,MAAMC,KAAN,SAAoBZ,SAApB,CAA8B;AAC1BU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAsB,KAAKR,KAAjC;AACA,UAAMS,KAAK,GAAGC,MAAM,CAACP,QAAP,CAAgBQ,QAAhB,KAA6BJ,IAA3C;AACA,WACIE,KAAK,GAAGhB,KAAK,CAACmB,aAAN,CAAoBJ,SAApB,EAA+B,KAAKR,KAApC,CAAH,GAAgD,IADzD;AAGH;;AAPyB;;AAU9B,MAAMa,IAAN,SAAmBnB,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SACzBoB,WADyB,GACX,CAACC,KAAD,EAAQd,OAAR,KAAoB;AAC9Bc,MAAAA,KAAK,CAACC,cAAN;AACAf,MAAAA,OAAO,CAACgB,IAAR,CAAa,KAAKjB,KAAL,CAAWkB,EAAxB;AACH,KAJwB;AAAA;;AAMzBd,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEc,MAAAA,EAAF;AAAMb,MAAAA;AAAN,QAAmB,KAAKL,KAA9B;AACA,WACA,oBAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACImB,OAAO,IAAI;AACP,aAAO;AAAG,QAAA,IAAI,EAAED,EAAT;AAAa,QAAA,OAAO,EAAGH,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwBI,OAAO,CAAClB,OAAhC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4EI,QAA5E,CAAP;AACH,KAHL,CADA;AAOH;;AAfwB;;AAkB7B,SAASP,aAAT,EAAwBQ,KAAxB,EAA+BO,IAA/B","sourcesContent":["// 组件目标\n// 实现BrowserRouter\n// 1.将children传出\n// 2.link需要动态更新history，利用上下文context传出\n// 实现Route\n// 实现Link\n// 1.返回一个a标签 接收 to 和 children两个参数\n// 2.为了避免a标签切换界面闪屏，点击时候利用history跳转\n// 3.为了保证动态更新，使用同一个history，从父组件BrowserRouter中传下来\n\nimport React, { Component } from 'react';\nimport { createBrowerHistory } from 'history';\n\nconst RouterContext = React.createContext();\n\nclass BrowserRouter extends Component {\n    constructor(props) {\n        super(props);\n        this.history = createBrowerHistory();\n        this.state = {\n            location: this.history.location\n        };\n    }\n\n    render() {\n        return (\n            <RouterContext.Provider value={{history: this.history}}>\n                {this.props.children}\n            </RouterContext.Provider>\n        )\n    }\n}\n\nclass Route extends Component {\n    render() {\n        const { path, component } = this.props;\n        const match = window.location.pathname === path;\n        return (\n            match ? React.createElement(component, this.props) : null\n        )\n    }\n}\n\nclass Link extends Component {\n    handleClick = (event, history) => {\n        event.preventDefault();\n        history.push(this.props.to);\n    }\n\n    render() {\n        const { to, children } = this.props;\n        return (\n        <RouterContext.Consumer>{\n            context => {\n                return <a href={to} onClick={(event) => this.handleClick(event, context.history)}>{children}</a>\n            }    \n        }</RouterContext.Consumer>\n        )\n    }\n}\n\nexport { BrowserRouter, Route, Link };"]},"metadata":{},"sourceType":"module"}