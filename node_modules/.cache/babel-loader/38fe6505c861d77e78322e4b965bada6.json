{"ast":null,"code":"var _jsxFileName = \"/Users/hanyue/development/github/react-components/src/plugins/KRouter.js\";\n// 组件目标\n// 实现BrowserRouter\n// 1.将children传出\n// 2.link需要动态更新history，利用上下文context传出\n// 实现Route\n// 1. 接收两个参数 path 和 component\n// 2. 判断location和传入的path一致，createElement创建\n// 3. 利用上下文接收history并动态更新组件\n// 实现Link\n// 1.返回一个a标签 接收 to 和 children两个参数\n// 2.为了避免a标签切换界面闪屏，点击时候利用history跳转\n// 3.为了保证动态更新和一致性，使用同一个history，从父组件BrowserRouter中传下来\nimport React, { Component } from 'react';\nimport { createBrowserHistory } from 'history';\nconst RouterContext = React.createContext();\n\nclass BrowserRouter extends Component {\n  constructor(props) {\n    super(props);\n    this.history = createBrowserHistory();\n    this.state = {\n      location: this.history.location\n    }; // 当history变化时候监听并改变\n\n    this.history.listen(location => {\n      this.setState({\n        location\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(RouterContext.Provider, {\n      value: {\n        history: this.history,\n        location: this.state.location\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nclass Route extends Component {\n  render() {\n    return React.createElement(RouterContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, context => {\n      const {\n        path,\n        component\n      } = this.props;\n      const match = window.location.pathname === path;\n      return match ? React.createElement(component, this.props) : null;\n    });\n  }\n\n}\n\nclass Link extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = (event, history) => {\n      event.preventDefault();\n      history.push(this.props.to);\n    };\n  }\n\n  render() {\n    const {\n      to,\n      children\n    } = this.props;\n    return React.createElement(RouterContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, context => {\n      return React.createElement(\"a\", {\n        href: to,\n        onClick: event => this.handleClick(event, context.history),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, children);\n    });\n  }\n\n}\n\nexport { BrowserRouter, Route, Link };","map":{"version":3,"sources":["/Users/hanyue/development/github/react-components/src/plugins/KRouter.js"],"names":["React","Component","createBrowserHistory","RouterContext","createContext","BrowserRouter","constructor","props","history","state","location","listen","setState","render","children","Route","context","path","component","match","window","pathname","createElement","Link","handleClick","event","preventDefault","push","to"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,MAAMC,aAAa,GAAGH,KAAK,CAACI,aAAN,EAAtB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAeN,oBAAoB,EAAnC;AACA,SAAKO,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KAAKF,OAAL,CAAaE;AADd,KAAb,CAHe,CAMf;;AACA,SAAKF,OAAL,CAAaG,MAAb,CAAqBD,QAAQ,IAAI;AAC7B,WAAKE,QAAL,CAAc;AACVF,QAAAA;AADU,OAAd;AAGH,KAJD;AAKH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAE;AAACL,QAAAA,OAAO,EAAE,KAAKA,OAAf;AAAwBE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAA7C,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWO,QADhB,CADJ;AAKH;;AArBiC;;AAwBtC,MAAMC,KAAN,SAAoBd,SAApB,CAA8B;AAC1BY,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIG,OAAO,IAAI;AACP,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAsB,KAAKX,KAAjC;AACA,YAAMY,KAAK,GAAGC,MAAM,CAACV,QAAP,CAAgBW,QAAhB,KAA6BJ,IAA3C;AACA,aAAOE,KAAK,GAAGnB,KAAK,CAACsB,aAAN,CAAoBJ,SAApB,EAA+B,KAAKX,KAApC,CAAH,GAAgD,IAA5D;AACH,KALL,CADJ;AASH;;AAXyB;;AAc9B,MAAMgB,IAAN,SAAmBtB,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SACzBuB,WADyB,GACX,CAACC,KAAD,EAAQjB,OAAR,KAAoB;AAC9BiB,MAAAA,KAAK,CAACC,cAAN;AACAlB,MAAAA,OAAO,CAACmB,IAAR,CAAa,KAAKpB,KAAL,CAAWqB,EAAxB;AACH,KAJwB;AAAA;;AAMzBf,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEe,MAAAA,EAAF;AAAMd,MAAAA;AAAN,QAAmB,KAAKP,KAA9B;AACA,WACA,oBAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIS,OAAO,IAAI;AACP,aAAO;AAAG,QAAA,IAAI,EAAEY,EAAT;AAAa,QAAA,OAAO,EAAGH,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,EAAwBT,OAAO,CAACR,OAAhC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4EM,QAA5E,CAAP;AACH,KAHL,CADA;AAOH;;AAfwB;;AAkB7B,SAAST,aAAT,EAAwBU,KAAxB,EAA+BQ,IAA/B","sourcesContent":["// 组件目标\n// 实现BrowserRouter\n// 1.将children传出\n// 2.link需要动态更新history，利用上下文context传出\n// 实现Route\n// 1. 接收两个参数 path 和 component\n// 2. 判断location和传入的path一致，createElement创建\n// 3. 利用上下文接收history并动态更新组件\n// 实现Link\n// 1.返回一个a标签 接收 to 和 children两个参数\n// 2.为了避免a标签切换界面闪屏，点击时候利用history跳转\n// 3.为了保证动态更新和一致性，使用同一个history，从父组件BrowserRouter中传下来\n\nimport React, { Component } from 'react';\nimport { createBrowserHistory } from 'history';\n\nconst RouterContext = React.createContext();\n\nclass BrowserRouter extends Component {\n    constructor(props) {\n        super(props);\n        this.history = createBrowserHistory();\n        this.state = {\n            location: this.history.location\n        };\n        // 当history变化时候监听并改变\n        this.history.listen( location => {\n            this.setState({\n                location\n            })\n        });\n    }\n\n    render() {\n        return (\n            <RouterContext.Provider value={{history: this.history, location: this.state.location}}>\n                {this.props.children}\n            </RouterContext.Provider>\n        )\n    }\n}\n\nclass Route extends Component {\n    render() {\n        return (\n            <RouterContext.Consumer>{\n                context => {\n                    const { path, component } = this.props;\n                    const match = window.location.pathname === path;\n                    return match ? React.createElement(component, this.props) : null\n                }\n            }</RouterContext.Consumer>\n        )\n    }\n}\n\nclass Link extends Component {\n    handleClick = (event, history) => {\n        event.preventDefault();\n        history.push(this.props.to);\n    }\n\n    render() {\n        const { to, children } = this.props;\n        return (\n        <RouterContext.Consumer>{\n            context => {\n                return <a href={to} onClick={(event) => this.handleClick(event, context.history)}>{children}</a>\n            }    \n        }</RouterContext.Consumer>\n        )\n    }\n}\n\nexport { BrowserRouter, Route, Link };"]},"metadata":{},"sourceType":"module"}