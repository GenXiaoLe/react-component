{"ast":null,"code":"var _jsxFileName = \"/Users/hanyue/development/github/react-components/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import { Provider } from 'react-redux';\n// // import { Provider } from './plugins/KReduxReact';\n// import store from './store/index';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <App />\n//     </ Provider>, \n//     document.getElementById('root')\n// );\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport React from './plugins/KReact.fiber';\nimport Component from './plugins/component/components';\nimport ReactDOM, { useState } from './plugins/KReactDOM.fiber';\n\nclass ComponentNode extends Component {\n  // 固定写法\n  // 默认属性\n  render() {\n    const {\n      color\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"ComponentNode\"), React.createElement(\"p\", {\n      className: color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"_defaultProps\"));\n  }\n\n}\n\nComponentNode.defaultProps = {\n  color: 'pink'\n};\n\nfunction FunNode(props) {\n  const {\n    count,\n    countState\n  } = useState(0);\n  console.log(countState);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"funNode\"));\n}\n\nconst jsx = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: \"www.baidu.com\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, \"kkb\"), React.createElement(\"p\", {\n  onClick: () => console.log('onclick'),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, \"kkb-text\"), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: \"www.baidu.com\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, \"baidu\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \"h3 baidu\")), React.createElement(FunNode, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), React.createElement(ComponentNode, {\n  color: \"red\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}), React.createElement(React.Fragment, null, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, \"fragmentNode\")));\nReactDOM.render(jsx, document.getElementById('root'));","map":{"version":3,"sources":["/Users/hanyue/development/github/react-components/src/index.js"],"names":["React","Component","ReactDOM","useState","ComponentNode","render","color","props","defaultProps","FunNode","count","countState","console","log","jsx","document","getElementById"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,QAAP,IAAmBC,QAAnB,QAAmC,2BAAnC;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAClC;AACA;AAEAI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAG,MAAA,SAAS,EAAED,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CADJ;AAMH;;AAZiC;;AAAhCF,a,CAGKI,Y,GAAe;AAAEF,EAAAA,KAAK,EAAE;AAAT,C;;AAY1B,SAASG,OAAT,CAAiBF,KAAjB,EAAwB;AACpB,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBR,QAAQ,CAAC,CAAD,CAAtC;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFG,CAAP;AAIH;;AAED,MAAMG,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAG,EAAA,IAAI,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI;AAAG,EAAA,OAAO,EAAE,MAAMF,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAG,EAAA,IAAI,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAHJ,EAOI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPJ,EAQI,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARJ,EASI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CATJ,CAAZ;AAmBAX,QAAQ,CAACG,MAAT,CACIS,GADJ,EAEIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import { Provider } from 'react-redux';\n// // import { Provider } from './plugins/KReduxReact';\n\n// import store from './store/index';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//     <Provider store={store}>\n//         <App />\n//     </ Provider>, \n//     document.getElementById('root')\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nimport React from './plugins/KReact.fiber';\nimport Component from './plugins/component/components';\nimport ReactDOM, { useState } from './plugins/KReactDOM.fiber';\n\nclass ComponentNode extends Component {\n    // 固定写法\n    // 默认属性\n    static defaultProps = { color: 'pink' };\n    render() {\n        const { color } = this.props;\n        return (\n            <div>\n                <p>ComponentNode</p>\n                <p className={color}>_defaultProps</p>\n            </div>\n        )\n    }\n}\n\nfunction FunNode(props) {\n    const { count, countState } = useState(0);\n    console.log(countState);\n\n    return <div>\n        {/* <button onClick={countState(count + 1)}>{count}</button> */}\n        <p>funNode</p>\n    </div>\n}\n\nconst jsx = <div>\n                <a href=\"www.baidu.com\">kkb</a>\n                <p onClick={() => console.log('onclick')}>kkb-text</p>\n                <h3>\n                    <a href=\"www.baidu.com\">baidu</a>\n                    <p>h3 baidu</p>\n                </h3>\n                <FunNode />\n                <ComponentNode color=\"red\" />\n                <>\n                    <div>fragmentNode</div>\n                </>\n                {/* {[1, 2, 3].map(item => {\n                    return (<div key={item}>\n                        <p>{item}</p>\n                    </div>)\n                })} */}\n            </div>\n\nReactDOM.render(\n    jsx, \n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}