{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'; // import { createStore, applyMiddleware } from '../plugins/KRedux';\n// import thunk from '../plugins/thunk';\n// import logger from '../plugins/logger';\n\nfunction counterRedurce(state = 0, action) {\n  let num = action.ployed || 1;\n\n  switch (action.type) {\n    case 'ADD':\n      return state + num;\n\n    case 'MINUS':\n      return state + num;\n\n    default:\n      return state;\n  }\n}\n\nlet initUser = {\n  isLogin: false,\n  user: {\n    name: null\n  }\n};\n\nfunction loginRedurce(state = { ...initUser\n}, action) {\n  switch (action.type) {\n    case 'LOGININ_SUCCESS':\n      return Object.assign(state, {\n        isLogin: true,\n        user: {\n          name: 'xiaoming'\n        }\n      });\n\n    case 'LOGINOUT_SUCCESS':\n      return Object.assign(state, {\n        isLogin: false,\n        user: {\n          name: null\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(combineReducers({\n  count: counterRedurce,\n  login: loginRedurce\n}), applyMiddleware(logger, thunk));\nexport default store;","map":{"version":3,"sources":["/Users/hanyue/development/github/react-components/src/store/index.js"],"names":["createStore","applyMiddleware","combineReducers","thunk","logger","counterRedurce","state","action","num","ployed","type","initUser","isLogin","user","name","loginRedurce","Object","assign","store","count","login"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;AACA;AACA;;AAEA,SAASC,cAAT,CAAwBC,KAAK,GAAG,CAAhC,EAAmCC,MAAnC,EAA2C;AACvC,MAAIC,GAAG,GAAGD,MAAM,CAACE,MAAP,IAAiB,CAA3B;;AACA,UAAOF,MAAM,CAACG,IAAd;AACI,SAAK,KAAL;AACI,aAAOJ,KAAK,GAAGE,GAAf;;AACJ,SAAK,OAAL;AACI,aAAOF,KAAK,GAAGE,GAAf;;AACJ;AACI,aAAOF,KAAP;AANR;AAQH;;AAED,IAAIK,QAAQ,GAAG;AACXC,EAAAA,OAAO,EAAE,KADE;AAEXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE;AADJ;AAFK,CAAf;;AAOA,SAASC,YAAT,CAAsBT,KAAK,GAAG,EAAC,GAAGK;AAAJ,CAA9B,EAA6CJ,MAA7C,EAAqD;AACjD,UAAOA,MAAM,CAACG,IAAd;AACI,SAAK,iBAAL;AACI,aAAOM,MAAM,CAACC,MAAP,CAAcX,KAAd,EAAqB;AACxBM,QAAAA,OAAO,EAAE,IADe;AAExBC,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE;AADJ;AAFkB,OAArB,CAAP;;AAMJ,SAAK,kBAAL;AACI,aAAOE,MAAM,CAACC,MAAP,CAAcX,KAAd,EAAqB;AACxBM,QAAAA,OAAO,EAAE,KADe;AAExBC,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE;AADJ;AAFkB,OAArB,CAAP;;AAMJ;AACI,aAAOR,KAAP;AAhBR;AAkBH;;AAED,MAAMY,KAAK,GAAGlB,WAAW,CAACE,eAAe,CAAC;AAAEiB,EAAAA,KAAK,EAAEd,cAAT;AAAyBe,EAAAA,KAAK,EAAEL;AAAhC,CAAD,CAAhB,EAAkEd,eAAe,CAACG,MAAD,EAASD,KAAT,CAAjF,CAAzB;AAEA,eAAee,KAAf","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\n// import { createStore, applyMiddleware } from '../plugins/KRedux';\n// import thunk from '../plugins/thunk';\n// import logger from '../plugins/logger';\n\nfunction counterRedurce(state = 0, action) {\n    let num = action.ployed || 1;\n    switch(action.type) {\n        case 'ADD':\n            return state + num;\n        case 'MINUS':\n            return state + num;\n        default:\n            return state;\n    }\n}\n\nlet initUser = {\n    isLogin: false,\n    user: {\n        name: null\n    }\n}\n\nfunction loginRedurce(state = {...initUser}, action) {\n    switch(action.type) {\n        case 'LOGININ_SUCCESS':\n            return Object.assign(state, {\n                isLogin: true,\n                user: {\n                    name: 'xiaoming'\n                }\n            });\n        case 'LOGINOUT_SUCCESS':\n            return Object.assign(state, {\n                isLogin: false,\n                user: {\n                    name: null\n                }\n            });\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(combineReducers({ count: counterRedurce, login: loginRedurce }), applyMiddleware(logger, thunk));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}