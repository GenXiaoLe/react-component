{"ast":null,"code":"var _jsxFileName = \"/Users/hanyue/development/github/react-components/src/plugins/Form.js\";\nimport React, { Component } from 'react';\n\nconst kFormCeater = Comp => {\n  var _temp;\n\n  return _temp = class Form extends Component {\n    constructor(props) {\n      super(props);\n\n      this.handleChange = e => {\n        let {\n          name,\n          value\n        } = e.target;\n        const error = this.validateInit();\n        this.setState({\n          [name]: value,\n          error\n        });\n      };\n\n      this.getFieldDecorator = (field, options) => InputComp => {\n        this.options[field] = options;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.cloneElement(InputComp, {\n          name: field,\n          value: this.state[field] || '',\n          onChange: this.handleChange\n        }), this.state.error[field] && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, this.state.error[field]));\n      };\n\n      this.getFieldValue = field => {\n        return this.state[field];\n      };\n\n      this.getFieldValues = () => {\n        return { ...this.state\n        };\n      };\n\n      this.validateInit = () => {\n        // 设置错误信息\n        const error = {}; // 配置验证表\n\n        const dict = {\n          required: _name => !this.state[_name] || this.state[_name] === '',\n          type: (_name, _type) => !this.state[_name] || typeof this.state[_name] !== _type\n        }; //接收一个callback，校验结束后返回error和value\n\n        for (let name in this.options) {\n          let _rules = this.options[name].rules;\n\n          if (name && _rules) {\n            for (let item in _rules) {\n              if (_rules[item] && dict[item] && dict[item](name, _rules[item])) {\n                error[name] = this.options[name].rules.message;\n              }\n            }\n          }\n        }\n\n        return error;\n      };\n\n      this.validateFields = validateCallback => {\n        const error = this.validateInit();\n        this.setState({\n          error\n        });\n        validateCallback(error, { ...this.state\n        });\n      };\n\n      this.state = {\n        error: {}\n      };\n      this.options = {};\n    }\n\n    render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Comp, {\n        getFieldDecorator: this.getFieldDecorator,\n        getFieldValue: this.getFieldValue,\n        getFieldValues: this.getFieldValues,\n        validateFields: this.validateFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n\n  }, _temp;\n};\n\nexport default kFormCeater;","map":{"version":3,"sources":["/Users/hanyue/development/github/react-components/src/plugins/Form.js"],"names":["React","Component","kFormCeater","Comp","Form","constructor","props","handleChange","e","name","value","target","error","validateInit","setState","getFieldDecorator","field","options","InputComp","cloneElement","state","onChange","getFieldValue","getFieldValues","dict","required","_name","type","_type","_rules","rules","item","message","validateFields","validateCallback","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst kFormCeater = Comp => {\n    return class Form extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                error: {}\n            };\n            this.options = {};\n        }\n        handleChange = (e) => {\n            let { name, value } = e.target;\n            const error = this.validateInit();\n\n            this.setState({\n                [name]: value,\n                error\n            });\n        }\n        // 获取传入组件并绑定相应事件\n        getFieldDecorator = (field, options) => InputComp => {\n            this.options[field] = options;\n            return <div>\n                {\n                    React.cloneElement(InputComp, {\n                        name: field,\n                        value: this.state[field] || '',\n                        onChange: this.handleChange\n                    })\n                }\n                {\n                    this.state.error[field] && <p>{this.state.error[field]}</p>\n                }\n            </div>;\n        }\n        // 获取单个value\n        getFieldValue = (field) => {\n            return this.state[field];\n        }\n        // 获取所有value\n        getFieldValues = () => {\n            return {...this.state};\n        }\n        validateInit = () => {\n            // 设置错误信息\n            const error = {};\n            // 配置验证表\n            const dict = {\n                required: (_name) => !this.state[_name] || this.state[_name] === '',\n                type: (_name, _type) => !this.state[_name] || typeof this.state[_name] !== _type\n            }\n\n            //接收一个callback，校验结束后返回error和value\n            for (let name in this.options) {\n                let _rules = this.options[name].rules;\n                if (name && _rules) {\n                    for (let item in _rules) {\n                        if (_rules[item] && dict[item] && dict[item](name, _rules[item])) {\n                            error[name] = this.options[name].rules.message;\n                        }\n                    }\n                }\n            }\n\n            return error;\n        }\n        // 数据校验\n        validateFields = (validateCallback) => {\n            const error = this.validateInit();\n            this.setState({ error });\n            validateCallback(error, {...this.state});\n        }\n\n        render() {\n            return (\n                <div>\n                    <Comp getFieldDecorator={this.getFieldDecorator} getFieldValue={this.getFieldValue} getFieldValues={this.getFieldValues} validateFields={this.validateFields} />\n                </div>\n            )\n        }\n    } \n}\n\nexport default kFormCeater;"]},"metadata":{},"sourceType":"module"}