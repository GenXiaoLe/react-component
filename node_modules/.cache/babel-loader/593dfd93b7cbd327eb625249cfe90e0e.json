{"ast":null,"code":"var _jsxFileName = \"/Users/hanyue/development/github/react-components/src/plugins/Form.js\";\nimport React, { Component } from 'react';\n\nconst kFormCeater = Comp => {\n  var _temp;\n\n  return _temp = class Form extends Component {\n    constructor(props) {\n      super(props);\n\n      this.handleChange = e => {\n        let {\n          name,\n          value\n        } = e.target;\n        this.validateInit({ ...this.state,\n          [name]: value\n        });\n      };\n\n      this.getFieldDecorator = (field, options) => InputComp => {\n        this.options[field] = options;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.cloneElement(InputComp, {\n          name: field,\n          value: this.state[field] || '',\n          onChange: this.handleChange\n        }), this.state.error[field] && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, this.state.error[field]));\n      };\n\n      this.getFieldValue = field => {\n        return this.state[field];\n      };\n\n      this.getFieldValues = () => {\n        return { ...this.state\n        };\n      };\n\n      this.validateInit = (state, callback) => {\n        // 设置错误信息\n        const error = {}; // 配置验证表\n\n        const dict = {\n          required: _name => !state[_name] || state[_name] === '',\n          type: (_name, _type) => !state[_name] || typeof state[_name] !== _type\n        }; //接收一个callback，校验结束后返回error和value\n\n        for (let name in this.options) {\n          let _rules = this.options[name].rules;\n\n          if (name && _rules) {\n            for (let item in _rules) {\n              if (_rules[item] && dict[item] && dict[item](name, _rules[item])) {\n                error[name] = this.options[name].rules.message;\n              }\n            }\n          }\n        }\n\n        this.setState({ ...state,\n          error\n        }, () => {\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n        });\n      };\n\n      this.validateFields = validateCallback => {\n        this.validateInit(this.state, () => {\n          validateCallback(this.state.error, { ...this.state\n          });\n        });\n      };\n\n      this.state = {\n        error: {}\n      };\n      this.options = {};\n    }\n\n    render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Comp, {\n        getFieldDecorator: this.getFieldDecorator,\n        getFieldValue: this.getFieldValue,\n        getFieldValues: this.getFieldValues,\n        validateFields: this.validateFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }\n\n  }, _temp;\n};\n\nexport default kFormCeater;","map":{"version":3,"sources":["/Users/hanyue/development/github/react-components/src/plugins/Form.js"],"names":["React","Component","kFormCeater","Comp","Form","constructor","props","handleChange","e","name","value","target","validateInit","state","getFieldDecorator","field","options","InputComp","cloneElement","onChange","error","getFieldValue","getFieldValues","callback","dict","required","_name","type","_type","_rules","rules","item","message","setState","validateFields","validateCallback","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst kFormCeater = Comp => {\n    return class Form extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                error: {}\n            };\n            this.options = {};\n        }\n        handleChange = (e) => {\n            let { name, value } = e.target;\n            this.validateInit({\n                ...this.state,\n                [name]: value\n            });\n        }\n        // 获取传入组件并绑定相应事件\n        getFieldDecorator = (field, options) => InputComp => {\n            this.options[field] = options;\n            return <div>\n                {\n                    React.cloneElement(InputComp, {\n                        name: field,\n                        value: this.state[field] || '',\n                        onChange: this.handleChange\n                    })\n                }\n                {\n                    this.state.error[field] && <p>{this.state.error[field]}</p>\n                }\n            </div>;\n        }\n        // 获取单个value\n        getFieldValue = (field) => {\n            return this.state[field];\n        }\n        // 获取所有value\n        getFieldValues = () => {\n            return {...this.state};\n        }\n        validateInit = (state, callback) => {\n            // 设置错误信息\n            const error = {};\n            // 配置验证表\n            const dict = {\n                required: (_name) => !state[_name] || state[_name] === '',\n                type: (_name, _type) => !state[_name] || typeof state[_name] !== _type\n            }\n\n            //接收一个callback，校验结束后返回error和value\n            for (let name in this.options) {\n                let _rules = this.options[name].rules;\n                if (name && _rules) {\n                    for (let item in _rules) {\n                        if (_rules[item] && dict[item] && dict[item](name, _rules[item])) {\n                            error[name] = this.options[name].rules.message;\n                        }\n                    }\n                }\n            }\n\n            this.setState({ \n                ...state,\n                error \n            }, () => {\n                if (callback && typeof callback === 'function') {\n                    callback();\n                }\n            });\n        }\n        // 数据校验\n        validateFields = (validateCallback) => {\n            this.validateInit(this.state, () => {\n                validateCallback(this.state.error, {...this.state});\n            });\n        }\n\n        render() {\n            return (\n                <div>\n                    <Comp getFieldDecorator={this.getFieldDecorator} getFieldValue={this.getFieldValue} getFieldValues={this.getFieldValues} validateFields={this.validateFields} />\n                </div>\n            )\n        }\n    } \n}\n\nexport default kFormCeater;"]},"metadata":{},"sourceType":"module"}