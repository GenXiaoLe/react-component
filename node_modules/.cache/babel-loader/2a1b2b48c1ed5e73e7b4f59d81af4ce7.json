{"ast":null,"code":"// import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createStore, applyMiddleware } from '../plugins/KRedux'; // import thunk from '../plugins/thunk';\n// import logger from '../plugins/logger';\n\nconst initState = {\n  count: 0\n};\n\nfunction reduce(state = initState, action) {\n  let num = action.ployed || 1;\n\n  switch (action.type) {\n    case 'ADD':\n      return {\n        count: state.count + num\n      };\n\n    case 'MINUS':\n      return {\n        count: state.count - num\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reduce, applyMiddleware(logger, thunk));\nexport default store;","map":{"version":3,"sources":["/Users/hanyue/development/github/react-components/src/store/index.js"],"names":["thunk","logger","createStore","applyMiddleware","initState","count","reduce","state","action","num","ployed","type","store"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,mBAA7C,C,CACA;AACA;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE;AADO,CAAlB;;AAIA,SAASC,MAAT,CAAgBC,KAAK,GAAGH,SAAxB,EAAmCI,MAAnC,EAA2C;AACvC,MAAIC,GAAG,GAAGD,MAAM,CAACE,MAAP,IAAiB,CAA3B;;AACA,UAAOF,MAAM,CAACG,IAAd;AACI,SAAK,KAAL;AACI,aAAO;AAAEN,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcI;AAAvB,OAAP;;AACJ,SAAK,OAAL;AACI,aAAO;AAAEJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcI;AAAvB,OAAP;;AACJ;AACI,aAAOF,KAAP;AANR;AAQH;;AAED,MAAMK,KAAK,GAAGV,WAAW,CAACI,MAAD,EAASH,eAAe,CAACF,MAAD,EAASD,KAAT,CAAxB,CAAzB;AAEA,eAAeY,KAAf","sourcesContent":["// import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport { createStore, applyMiddleware } from '../plugins/KRedux';\n// import thunk from '../plugins/thunk';\n// import logger from '../plugins/logger';\n\nconst initState = {\n    count: 0\n}\n\nfunction reduce(state = initState, action) {\n    let num = action.ployed || 1;\n    switch(action.type) {\n        case 'ADD':\n            return { count: state.count + num };\n        case 'MINUS':\n            return { count: state.count - num };\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(reduce, applyMiddleware(logger, thunk));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}