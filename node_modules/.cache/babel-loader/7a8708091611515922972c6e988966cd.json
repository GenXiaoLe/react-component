{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\nimport raf from '../_util/raf';\nimport warning from '../_util/warning';\n\nvar ResizableTextArea =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResizableTextArea, _React$Component);\n\n  function ResizableTextArea(props) {\n    var _this;\n\n    _classCallCheck(this, ResizableTextArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResizableTextArea).call(this, props));\n\n    _this.saveTextArea = function (textArea) {\n      _this.textArea = textArea;\n    };\n\n    _this.resizeOnNextFrame = function () {\n      raf.cancel(_this.nextFrameActionId);\n      _this.nextFrameActionId = raf(_this.resizeTextarea);\n    };\n\n    _this.resizeTextarea = function () {\n      var autoSize = _this.props.autoSize || _this.props.autosize;\n\n      if (!autoSize || !_this.textArea) {\n        return;\n      }\n\n      var minRows = autoSize.minRows,\n          maxRows = autoSize.maxRows;\n      var textareaStyles = calculateNodeHeight(_this.textArea, false, minRows, maxRows);\n\n      _this.setState({\n        textareaStyles: textareaStyles,\n        resizing: true\n      }, function () {\n        raf.cancel(_this.resizeFrameId);\n        _this.resizeFrameId = raf(function () {\n          _this.setState({\n            resizing: false\n          });\n        });\n      });\n    };\n\n    _this.renderTextArea = function () {\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          autoSize = _this$props.autoSize,\n          autosize = _this$props.autosize,\n          className = _this$props.className,\n          disabled = _this$props.disabled;\n      var _this$state = _this.state,\n          textareaStyles = _this$state.textareaStyles,\n          resizing = _this$state.resizing;\n      warning(autosize === undefined, 'Input.TextArea', 'autosize is deprecated, please use autoSize instead.');\n      var otherProps = omit(_this.props, ['prefixCls', 'onPressEnter', 'autoSize', 'autosize', 'defaultValue', 'allowClear']);\n      var cls = classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), disabled)); // Fix https://github.com/ant-design/ant-design/issues/6776\n      // Make sure it could be reset when using form.getFieldDecorator\n\n      if ('value' in otherProps) {\n        otherProps.value = otherProps.value || '';\n      }\n\n      var style = _extends(_extends(_extends({}, _this.props.style), textareaStyles), resizing ? {\n        overflow: 'hidden'\n      } : null);\n\n      return React.createElement(ResizeObserver, {\n        onResize: _this.resizeOnNextFrame,\n        disabled: !(autoSize || autosize)\n      }, React.createElement(\"textarea\", _extends({}, otherProps, {\n        className: cls,\n        style: style,\n        ref: _this.saveTextArea\n      })));\n    };\n\n    _this.state = {\n      textareaStyles: {},\n      resizing: false\n    };\n    return _this;\n  }\n\n  _createClass(ResizableTextArea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resizeTextarea();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Re-render with the new content then recalculate the height as required.\n      if (prevProps.value !== this.props.value) {\n        this.resizeTextarea();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      raf.cancel(this.nextFrameActionId);\n      raf.cancel(this.resizeFrameId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderTextArea();\n    }\n  }]);\n\n  return ResizableTextArea;\n}(React.Component);\n\npolyfill(ResizableTextArea);\nexport default ResizableTextArea;","map":{"version":3,"sources":["input/ResizableTextArea.jsx"],"names":["ResizableTextArea","React","Component","raf","autoSize","minRows","maxRows","textareaStyles","calculateNodeHeight","resizing","prefixCls","autosize","className","disabled","warning","otherProps","omit","cls","classNames","style","overflow","saveTextArea","prevProps","polyfill"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,QAAA,yBAAA;AACA,OAAA,cAAA,MAAA,oBAAA;AACA,OAAA,IAAA,MAAA,SAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,mBAAA,MAAA,uBAAA;AACA,OAAA,GAAA,MAAA,cAAA;AACA,OAAA,OAAA,MAAA,kBAAA;;IACMA,iB;;;;;AACF,WAAA,iBAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,iBAAA,CAAA;;AACf,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,iBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AACA,IAAA,KAAA,CAAA,YAAA,GAAoB,UAAA,QAAA,EAAc;AAC9B,MAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AADJ,KAAA;;AAGA,IAAA,KAAA,CAAA,iBAAA,GAAyB,YAAM;AAC3BG,MAAAA,GAAG,CAAHA,MAAAA,CAAW,KAAA,CAAXA,iBAAAA;AACA,MAAA,KAAA,CAAA,iBAAA,GAAyBA,GAAG,CAAC,KAAA,CAA7B,cAA4B,CAA5B;AAFJ,KAAA;;AAIA,IAAA,KAAA,CAAA,cAAA,GAAsB,YAAM;AACxB,UAAMC,QAAQ,GAAG,KAAA,CAAA,KAAA,CAAA,QAAA,IAAuB,KAAA,CAAA,KAAA,CAAxC,QAAA;;AACA,UAAI,CAAA,QAAA,IAAa,CAAC,KAAA,CAAlB,QAAA,EAAiC;AAC7B;AACH;;AAJuB,UAKhBC,OALgB,GAKKD,QALL,CAAA,OAAA;AAAA,UAKPE,OALO,GAKKF,QALL,CAAA,OAAA;AAMxB,UAAMG,cAAc,GAAGC,mBAAmB,CAAC,KAAA,CAAD,QAAA,EAAA,KAAA,EAAA,OAAA,EAA1C,OAA0C,CAA1C;;AACA,MAAA,KAAA,CAAA,QAAA,CAAc;AAAED,QAAAA,cAAc,EAAhB,cAAA;AAAkBE,QAAAA,QAAQ,EAAE;AAA5B,OAAd,EAAkD,YAAM;AACpDN,QAAAA,GAAG,CAAHA,MAAAA,CAAW,KAAA,CAAXA,aAAAA;AACA,QAAA,KAAA,CAAA,aAAA,GAAqBA,GAAG,CAAC,YAAM;AAC3B,UAAA,KAAA,CAAA,QAAA,CAAc;AAAEM,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AADJ,SAAwB,CAAxB;AAFJ,OAAA;AAPJ,KAAA;;AAcA,IAAA,KAAA,CAAA,cAAA,GAAsB,YAAM;AAAA,UAAA,WAAA,GACuC,KAAA,CADvC,KAAA;AAAA,UAChBC,SADgB,GAAA,WAAA,CAAA,SAAA;AAAA,UACLN,QADK,GAAA,WAAA,CAAA,QAAA;AAAA,UACKO,QADL,GAAA,WAAA,CAAA,QAAA;AAAA,UACeC,SADf,GAAA,WAAA,CAAA,SAAA;AAAA,UAC0BC,QAD1B,GAAA,WAAA,CAAA,QAAA;AAAA,UAAA,WAAA,GAEa,KAAA,CAFb,KAAA;AAAA,UAEhBN,cAFgB,GAAA,WAAA,CAAA,cAAA;AAAA,UAEAE,QAFA,GAAA,WAAA,CAAA,QAAA;AAGxBK,MAAAA,OAAO,CAACH,QAAQ,KAAT,SAAA,EAAA,gBAAA,EAAPG,sDAAO,CAAPA;AACA,UAAMC,UAAU,GAAGC,IAAI,CAAC,KAAA,CAAD,KAAA,EAAa,CAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAApC,YAAoC,CAAb,CAAvB;AAQA,UAAMC,GAAG,GAAGC,UAAU,CAAA,SAAA,EAAA,SAAA,EAAA,eAAA,CAAA,EAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA,CAAA,EAZE,QAYF,CAAA,CAAtB,CAZwB,CAexB;AACA;;AACA,UAAI,WAAJ,UAAA,EAA2B;AACvBH,QAAAA,UAAU,CAAVA,KAAAA,GAAmBA,UAAU,CAAVA,KAAAA,IAAnBA,EAAAA;AACH;;AACD,UAAMI,KAAK,GAAG,QAAA,CAAc,QAAA,CAAc,QAAA,CAAA,EAAA,EAAkB,KAAA,CAAA,KAAA,CAAhC,KAAc,CAAd,EAAd,cAAc,CAAd,EAAmFV,QAAQ,GAAG;AAAEW,QAAAA,QAAQ,EAAE;AAAZ,OAAH,GAAzG,IAAc,CAAd;;AACA,aAAQ,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA;AAAgB,QAAA,QAAQ,EAAE,KAAA,CAA1B,iBAAA;AAAkD,QAAA,QAAQ,EAAE,EAAEhB,QAAQ,IAAV,QAAA;AAA5D,OAAA,EACZ,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,EAAA,UAAA,EAAA;AAA0B,QAAA,SAAS,EAAnC,GAAA;AAA0C,QAAA,KAAK,EAA/C,KAAA;AAAwD,QAAA,GAAG,EAAE,KAAA,CAAKiB;AAAlE,OAAA,CAAA,CADY,CAAR;AArBJ,KAAA;;AAyBA,IAAA,KAAA,CAAA,KAAA,GAAa;AACTd,MAAAA,cAAc,EADL,EAAA;AAETE,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAhDe,WAAA,KAAA;AAoDlB;;;;wCACmB;AAChB,WAAA,cAAA;AACH;;;uCACkBa,S,EAAW;AAC1B;AACA,UAAIA,SAAS,CAATA,KAAAA,KAAoB,KAAA,KAAA,CAAxB,KAAA,EAA0C;AACtC,aAAA,cAAA;AACH;AACJ;;;2CACsB;AACnBnB,MAAAA,GAAG,CAAHA,MAAAA,CAAW,KAAXA,iBAAAA;AACAA,MAAAA,GAAG,CAAHA,MAAAA,CAAW,KAAXA,aAAAA;AACH;;;6BACQ;AACL,aAAO,KAAP,cAAO,EAAP;AACH;;;;EArE2BF,KAAK,CAACC,S;;AAuEtCqB,QAAQ,CAARA,iBAAQ,CAARA;AACA,eAAA,iBAAA","sourcesContent":["import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\nimport raf from '../_util/raf';\nimport warning from '../_util/warning';\nclass ResizableTextArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveTextArea = (textArea) => {\n            this.textArea = textArea;\n        };\n        this.resizeOnNextFrame = () => {\n            raf.cancel(this.nextFrameActionId);\n            this.nextFrameActionId = raf(this.resizeTextarea);\n        };\n        this.resizeTextarea = () => {\n            const autoSize = this.props.autoSize || this.props.autosize;\n            if (!autoSize || !this.textArea) {\n                return;\n            }\n            const { minRows, maxRows } = autoSize;\n            const textareaStyles = calculateNodeHeight(this.textArea, false, minRows, maxRows);\n            this.setState({ textareaStyles, resizing: true }, () => {\n                raf.cancel(this.resizeFrameId);\n                this.resizeFrameId = raf(() => {\n                    this.setState({ resizing: false });\n                });\n            });\n        };\n        this.renderTextArea = () => {\n            const { prefixCls, autoSize, autosize, className, disabled } = this.props;\n            const { textareaStyles, resizing } = this.state;\n            warning(autosize === undefined, 'Input.TextArea', 'autosize is deprecated, please use autoSize instead.');\n            const otherProps = omit(this.props, [\n                'prefixCls',\n                'onPressEnter',\n                'autoSize',\n                'autosize',\n                'defaultValue',\n                'allowClear',\n            ]);\n            const cls = classNames(prefixCls, className, {\n                [`${prefixCls}-disabled`]: disabled,\n            });\n            // Fix https://github.com/ant-design/ant-design/issues/6776\n            // Make sure it could be reset when using form.getFieldDecorator\n            if ('value' in otherProps) {\n                otherProps.value = otherProps.value || '';\n            }\n            const style = Object.assign(Object.assign(Object.assign({}, this.props.style), textareaStyles), (resizing ? { overflow: 'hidden' } : null));\n            return (<ResizeObserver onResize={this.resizeOnNextFrame} disabled={!(autoSize || autosize)}>\n        <textarea {...otherProps} className={cls} style={style} ref={this.saveTextArea}/>\n      </ResizeObserver>);\n        };\n        this.state = {\n            textareaStyles: {},\n            resizing: false,\n        };\n    }\n    componentDidMount() {\n        this.resizeTextarea();\n    }\n    componentDidUpdate(prevProps) {\n        // Re-render with the new content then recalculate the height as required.\n        if (prevProps.value !== this.props.value) {\n            this.resizeTextarea();\n        }\n    }\n    componentWillUnmount() {\n        raf.cancel(this.nextFrameActionId);\n        raf.cancel(this.resizeFrameId);\n    }\n    render() {\n        return this.renderTextArea();\n    }\n}\npolyfill(ResizableTextArea);\nexport default ResizableTextArea;\n"]},"metadata":{},"sourceType":"module"}