{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable camelcase */\n\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as allIcons from '@ant-design/icons/lib/dist';\nimport ReactIcon from '@ant-design/icons-react';\nimport createFromIconfontCN from './IconFont';\nimport { svgBaseProps, withThemeSuffix, removeTypeTheme, getThemeFromTypeName, alias } from './utils';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { getTwoToneColor, setTwoToneColor } from './twoTonePrimaryColor'; // Initial setting\n\nReactIcon.add.apply(ReactIcon, _toConsumableArray(Object.keys(allIcons).map(function (key) {\n  return allIcons[key];\n})));\nsetTwoToneColor('#1890ff');\nvar defaultTheme = 'outlined';\nvar dangerousTheme;\n\nfunction unstable_ChangeThemeOfIconsDangerously(theme) {\n  warning(false, 'Icon', \"You are using the unstable method 'Icon.unstable_ChangeThemeOfAllIconsDangerously', \" + \"make sure that all the icons with theme '\".concat(theme, \"' display correctly.\"));\n  dangerousTheme = theme;\n}\n\nfunction unstable_ChangeDefaultThemeOfIcons(theme) {\n  warning(false, 'Icon', \"You are using the unstable method 'Icon.unstable_ChangeDefaultThemeOfIcons', \" + \"make sure that all the icons with theme '\".concat(theme, \"' display correctly.\"));\n  defaultTheme = theme;\n}\n\nvar Icon = function Icon(props) {\n  var _classNames;\n\n  var className = props.className,\n      type = props.type,\n      Component = props.component,\n      viewBox = props.viewBox,\n      spin = props.spin,\n      rotate = props.rotate,\n      tabIndex = props.tabIndex,\n      onClick = props.onClick,\n      children = props.children,\n      theme = props.theme,\n      twoToneColor = props.twoToneColor,\n      restProps = __rest(props, [\"className\", \"type\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\", \"theme\", \"twoToneColor\"]);\n\n  warning(Boolean(type || Component || children), 'Icon', 'Should have `type` prop or `component` prop or `children`.');\n  var classString = classNames((_classNames = {}, _defineProperty(_classNames, \"anticon\", true), _defineProperty(_classNames, \"anticon-\".concat(type), Boolean(type)), _classNames), className);\n  var svgClassString = classNames(_defineProperty({}, \"anticon-spin\", !!spin || type === 'loading'));\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n\n  var innerSvgProps = _extends(_extends({}, svgBaseProps), {\n    className: svgClassString,\n    style: svgStyle,\n    viewBox: viewBox\n  });\n\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  }\n\n  var renderInnerNode = function renderInnerNode() {\n    // component > children > type\n    if (Component) {\n      return React.createElement(Component, innerSvgProps, children);\n    }\n\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && React.isValidElement(children) && React.Children.only(children).type === 'use', 'Icon', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n\n    if (typeof type === 'string') {\n      var computedType = type;\n\n      if (theme) {\n        var themeInName = getThemeFromTypeName(type);\n        warning(!themeInName || theme === themeInName, 'Icon', \"The icon name '\".concat(type, \"' already specify a theme '\").concat(themeInName, \"',\") + \" the 'theme' prop '\".concat(theme, \"' will be ignored.\"));\n      }\n\n      computedType = withThemeSuffix(removeTypeTheme(alias(computedType)), dangerousTheme || theme || defaultTheme);\n      return React.createElement(ReactIcon, {\n        className: svgClassString,\n        type: computedType,\n        primaryColor: twoToneColor,\n        style: svgStyle\n      });\n    }\n  };\n\n  var iconTabIndex = tabIndex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n\n  return React.createElement(LocaleReceiver, {\n    componentName: \"Icon\"\n  }, function (locale) {\n    return React.createElement(\"i\", _extends({\n      \"aria-label\": type && \"\".concat(locale.icon, \": \").concat(type)\n    }, restProps, {\n      tabIndex: iconTabIndex,\n      onClick: onClick,\n      className: classString\n    }), renderInnerNode());\n  });\n};\n\nIcon.createFromIconfontCN = createFromIconfontCN;\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;","map":{"version":3,"sources":["icon/index.jsx"],"names":["__rest","t","Object","e","s","i","p","ReactIcon","allIcons","setTwoToneColor","defaultTheme","warning","dangerousTheme","Icon","className","type","Component","viewBox","spin","rotate","tabIndex","onClick","children","theme","twoToneColor","props","restProps","Boolean","classString","classNames","svgClassString","svgStyle","msTransform","transform","innerSvgProps","style","renderInnerNode","React","computedType","themeInName","getThemeFromTypeName","withThemeSuffix","removeTypeTheme","alias","iconTabIndex","locale"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable camelcase */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as allIcons from '@ant-design/icons/lib/dist';\nimport ReactIcon from '@ant-design/icons-react';\nimport createFromIconfontCN from './IconFont';\nimport { svgBaseProps, withThemeSuffix, removeTypeTheme, getThemeFromTypeName, alias, } from './utils';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { getTwoToneColor, setTwoToneColor } from './twoTonePrimaryColor';\n// Initial setting\nReactIcon.add(...Object.keys(allIcons).map(key => allIcons[key]));\nsetTwoToneColor('#1890ff');\nlet defaultTheme = 'outlined';\nlet dangerousTheme;\nfunction unstable_ChangeThemeOfIconsDangerously(theme) {\n    warning(false, 'Icon', `You are using the unstable method 'Icon.unstable_ChangeThemeOfAllIconsDangerously', ` +\n        `make sure that all the icons with theme '${theme}' display correctly.`);\n    dangerousTheme = theme;\n}\nfunction unstable_ChangeDefaultThemeOfIcons(theme) {\n    warning(false, 'Icon', `You are using the unstable method 'Icon.unstable_ChangeDefaultThemeOfIcons', ` +\n        `make sure that all the icons with theme '${theme}' display correctly.`);\n    defaultTheme = theme;\n}\nconst Icon = props => {\n    const { \n    // affect outter <i>...</i>\n    className, \n    // affect inner <svg>...</svg>\n    type, component: Component, viewBox, spin, rotate, tabIndex, onClick, \n    // children\n    children, \n    // other\n    theme, // default to outlined\n    twoToneColor } = props, restProps = __rest(props, [\"className\", \"type\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\", \"theme\", \"twoToneColor\"]);\n    warning(Boolean(type || Component || children), 'Icon', 'Should have `type` prop or `component` prop or `children`.');\n    const classString = classNames({\n        [`anticon`]: true,\n        [`anticon-${type}`]: Boolean(type),\n    }, className);\n    const svgClassString = classNames({\n        [`anticon-spin`]: !!spin || type === 'loading',\n    });\n    const svgStyle = rotate\n        ? {\n            msTransform: `rotate(${rotate}deg)`,\n            transform: `rotate(${rotate}deg)`,\n        }\n        : undefined;\n    const innerSvgProps = Object.assign(Object.assign({}, svgBaseProps), { className: svgClassString, style: svgStyle, viewBox });\n    if (!viewBox) {\n        delete innerSvgProps.viewBox;\n    }\n    const renderInnerNode = () => {\n        // component > children > type\n        if (Component) {\n            return <Component {...innerSvgProps}>{children}</Component>;\n        }\n        if (children) {\n            warning(Boolean(viewBox) ||\n                (React.Children.count(children) === 1 &&\n                    React.isValidElement(children) &&\n                    React.Children.only(children).type === 'use'), 'Icon', 'Make sure that you provide correct `viewBox`' +\n                ' prop (default `0 0 1024 1024`) to the icon.');\n            return (<svg {...innerSvgProps} viewBox={viewBox}>\n          {children}\n        </svg>);\n        }\n        if (typeof type === 'string') {\n            let computedType = type;\n            if (theme) {\n                const themeInName = getThemeFromTypeName(type);\n                warning(!themeInName || theme === themeInName, 'Icon', `The icon name '${type}' already specify a theme '${themeInName}',` +\n                    ` the 'theme' prop '${theme}' will be ignored.`);\n            }\n            computedType = withThemeSuffix(removeTypeTheme(alias(computedType)), dangerousTheme || theme || defaultTheme);\n            return (<ReactIcon className={svgClassString} type={computedType} primaryColor={twoToneColor} style={svgStyle}/>);\n        }\n    };\n    let iconTabIndex = tabIndex;\n    if (iconTabIndex === undefined && onClick) {\n        iconTabIndex = -1;\n    }\n    return (<LocaleReceiver componentName=\"Icon\">\n      {(locale) => (<i aria-label={type && `${locale.icon}: ${type}`} {...restProps} tabIndex={iconTabIndex} onClick={onClick} className={classString}>\n          {renderInnerNode()}\n        </i>)}\n    </LocaleReceiver>);\n};\nIcon.createFromIconfontCN = createFromIconfontCN;\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;\n"]},"metadata":{},"sourceType":"module"}