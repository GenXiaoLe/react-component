{"ast":null,"code":"var _jsxFileName = \"/Users/hanyue/development/github/react-components/src/pages/routerPage.js\";\nimport React, { Component } from 'react'; // import { BrowserRouter as Router, Route, Link, Switch, Redirect } from 'react-router-dom';\n\nimport { BrowserRouter as Router, Route, Link } from '../plugins/KRouter'; // import { connect } from 'react-redux';\n// import { connect } from '../plugins/KReduxReact';\n// import { Button } from 'antd';\n\nexport default class RouterPage extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"RouterPage\"), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"\\u9996\\u9875\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \" | \"), React.createElement(Link, {\n      to: \"/user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\\u7528\\u6237\\u4E2D\\u5FC3\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" | \")), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/user\",\n      render: () => React.createElement(UsePage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/search/:id\",\n      component: SearchPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass UsePage extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"usePage\");\n  }\n\n}\n\nclass HomePage extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"homePage\");\n  }\n\n}\n\nclass SearchPage extends Component {\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"searchPage-\", match.params.id), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/search/${match.params.id}/detail`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u8BE6\\u60C5\"), React.createElement(Route, {\n      path: \"/search/:id/detail\",\n      component: SratchDetailPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass SratchDetailPage extends Component {\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"SearchDetailPage-\", match.params.id);\n  }\n\n} // 路由守卫\n// const ProvideRouter = connect(\n//     state => ({login: state.login}),\n//     {\n//         LoginOut: () => ({type: 'LOGINOUT_SUCCESS'})\n//     }\n// )(\n//     class ProvideRouter extends Component {\n//         render() {\n//             console.log(this.props, 'Provide');\n//             const { login, path, component, LoginOut } = this.props;\n//             const { isLogin } = login;\n//             if (isLogin) {\n//                 return <div>\n//                     <Router path={path} component={component} />\n//                     <Button onClick={LoginOut}>退出</Button>\n//                 </div>\n//             }\n//             return (\n//                 <Redirect to={{ pathname: '/login', state: { redirect: path } }} />\n//             )\n//         }\n//     }\n// )\n// const LoginPages = connect(\n//     state => ({login: state.login}),\n//     {\n//         LoginIn: () => ({type: 'LOGININ_SUCCESS'})\n//     }\n// )(\n//     class LoginPage extends Component {\n//         render() {\n//             console.log(this.props, 'login');\n//             const { location, login, LoginIn } = this.props;\n//             const { isLogin } = login;\n//             const { redirect = '/' } = location.state || {};\n//             if (isLogin) {\n//                 return <Redirect to={redirect} />\n//             }\n//             return (\n//                 <div>\n//                     <Button onClick={LoginIn}>\n//                         login\n//                     </Button>\n//                 </div>\n//             )\n//         }\n//     }\n// )","map":{"version":3,"sources":["/Users/hanyue/development/github/react-components/src/pages/routerPage.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","RouterPage","render","HomePage","SearchPage","UsePage","match","props","params","id","SratchDetailPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import { BrowserRouter as Router, Route, Link, Switch, Redirect } from 'react-router-dom';\nimport { BrowserRouter as Router, Route, Link } from '../plugins/KRouter';\n// import { connect } from 'react-redux';\n// import { connect } from '../plugins/KReduxReact';\n// import { Button } from 'antd';\n\nexport default class RouterPage extends Component {\n    render() {\n        return (\n            <div>\n                <h3>RouterPage</h3>\n                <Router>\n                    <div>\n                        <Link to=\"/\">首页</Link>\n                        <span> | </span>\n                        <Link to=\"/user\">用户中心</Link>\n                        <span> | </span>\n                        {/* <Link to=\"/search/123\">搜索页面</Link> */}\n                    </div>\n\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route path=\"/user\" render={() => <UsePage />} />\n                    <Route path=\"/search/:id\" component={SearchPage} />\n                    {/* <Route path=\"/login\" component={LoginPages} /> */}\n\n\n                    {/* <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <ProvideRouter path=\"/user\" component={UsePage} />\n                        <Route path=\"/search/:id\" component={SearchPage} />\n                        <Route path=\"/login\" component={LoginPages} />\n                    </Switch> */}\n                </Router>\n            </div>\n        )\n    }\n}\n\nclass UsePage extends Component {\n    render() {\n        return (\n            <div>\n                usePage\n            </div>\n        )\n    }\n}\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <div>\n                homePage\n            </div>\n        )\n    }\n}\n\nclass SearchPage extends Component {\n    render() {\n        const { match } = this.props;\n        return (\n            <div>\n                <p>searchPage-{match.params.id}</p>\n                <Router>\n                    <Link to={`/search/${match.params.id}/detail`}>详情</Link>\n                    <Route path=\"/search/:id/detail\" component={SratchDetailPage} />\n                </Router>\n            </div>\n        )\n    }\n}\n\nclass SratchDetailPage extends Component {\n    render() {\n        const { match } = this.props;\n        return (\n            <div>\n                SearchDetailPage-{match.params.id}\n            </div>\n        )\n    }\n}\n\n// 路由守卫\n// const ProvideRouter = connect(\n//     state => ({login: state.login}),\n//     {\n//         LoginOut: () => ({type: 'LOGINOUT_SUCCESS'})\n//     }\n// )(\n//     class ProvideRouter extends Component {\n//         render() {\n//             console.log(this.props, 'Provide');\n//             const { login, path, component, LoginOut } = this.props;\n//             const { isLogin } = login;\n    \n//             if (isLogin) {\n//                 return <div>\n//                     <Router path={path} component={component} />\n//                     <Button onClick={LoginOut}>退出</Button>\n//                 </div>\n//             }\n    \n//             return (\n//                 <Redirect to={{ pathname: '/login', state: { redirect: path } }} />\n//             )\n//         }\n//     }\n// )\n\n// const LoginPages = connect(\n//     state => ({login: state.login}),\n//     {\n//         LoginIn: () => ({type: 'LOGININ_SUCCESS'})\n//     }\n// )(\n//     class LoginPage extends Component {\n//         render() {\n//             console.log(this.props, 'login');\n//             const { location, login, LoginIn } = this.props;\n//             const { isLogin } = login;\n\n//             const { redirect = '/' } = location.state || {};\n\n//             if (isLogin) {\n//                 return <Redirect to={redirect} />\n//             }\n\n//             return (\n//                 <div>\n//                     <Button onClick={LoginIn}>\n//                         login\n//                     </Button>\n//                 </div>\n//             )\n//         }\n//     }\n// )"]},"metadata":{},"sourceType":"module"}