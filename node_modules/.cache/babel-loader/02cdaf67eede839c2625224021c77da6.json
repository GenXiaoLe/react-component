{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport Icon from './index';\nvar customCache = new Set();\nexport default function create() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var scriptUrl = options.scriptUrl,\n      _options$extraCommonP = options.extraCommonProps,\n      extraCommonProps = _options$extraCommonP === void 0 ? {} : _options$extraCommonP;\n  /**\n   * DOM API required.\n   * Make sure in browser environment.\n   * The Custom Icon will create a <script/>\n   * that loads SVG symbols and insert the SVG Element into the document body.\n   */\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function' && typeof scriptUrl === 'string' && scriptUrl.length && !customCache.has(scriptUrl)) {\n    var script = document.createElement('script');\n    script.setAttribute('src', scriptUrl);\n    script.setAttribute('data-namespace', scriptUrl);\n    customCache.add(scriptUrl);\n    document.body.appendChild(script);\n  }\n\n  var Iconfont = function Iconfont(props) {\n    var type = props.type,\n        children = props.children,\n        restProps = __rest(props, [\"type\", \"children\"]); // component > children > type\n\n\n    var content = null;\n\n    if (props.type) {\n      content = React.createElement(\"use\", {\n        xlinkHref: \"#\".concat(type)\n      });\n    }\n\n    if (children) {\n      content = children;\n    }\n\n    return React.createElement(Icon, _extends({}, extraCommonProps, restProps), content);\n  };\n\n  Iconfont.displayName = 'Iconfont';\n  return Iconfont;\n}","map":{"version":3,"sources":["icon/IconFont.jsx"],"names":["__rest","t","Object","e","s","i","p","customCache","options","scriptUrl","extraCommonProps","document","script","Iconfont","type","children","props","restProps","content"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport Icon from './index';\nconst customCache = new Set();\nexport default function create(options = {}) {\n    const { scriptUrl, extraCommonProps = {} } = options;\n    /**\n     * DOM API required.\n     * Make sure in browser environment.\n     * The Custom Icon will create a <script/>\n     * that loads SVG symbols and insert the SVG Element into the document body.\n     */\n    if (typeof document !== 'undefined' &&\n        typeof window !== 'undefined' &&\n        typeof document.createElement === 'function' &&\n        typeof scriptUrl === 'string' &&\n        scriptUrl.length &&\n        !customCache.has(scriptUrl)) {\n        const script = document.createElement('script');\n        script.setAttribute('src', scriptUrl);\n        script.setAttribute('data-namespace', scriptUrl);\n        customCache.add(scriptUrl);\n        document.body.appendChild(script);\n    }\n    const Iconfont = props => {\n        const { type, children } = props, restProps = __rest(props, [\"type\", \"children\"]);\n        // component > children > type\n        let content = null;\n        if (props.type) {\n            content = <use xlinkHref={`#${type}`}/>;\n        }\n        if (children) {\n            content = children;\n        }\n        return (<Icon {...extraCommonProps} {...restProps}>\n        {content}\n      </Icon>);\n    };\n    Iconfont.displayName = 'Iconfont';\n    return Iconfont;\n}\n"]},"metadata":{},"sourceType":"module"}